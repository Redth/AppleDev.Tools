
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Xunit.Abstractions;

namespace AppleDev.Test;

public class ProvisioningProfilesTests : TestsBase
{
	public ProvisioningProfilesTests(ITestOutputHelper testOutputHelper) : base(testOutputHelper)
	{
		
	}

	[Fact]
	public async Task ReadProfileTest()
	{
		var data = System.Convert.FromBase64String(SampleProfile);
		
		var profile = await ProvisioningProfiles.ParseAsync(data);
		
		Assert.NotNull(profile.Name);
	}
	
	[Fact]
	public async Task ListProfilesTest()
	{
		var profiles = await ProvisioningProfiles.ListProfilesAsync();
		
		foreach (var profile in profiles)
		{
			Assert.NotNull(profile.Name);
		}
	}

	const string SampleProfile = @"";
}